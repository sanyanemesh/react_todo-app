{"version":3,"sources":["components/TodoAdd.js","components/Todo.js","components/TodoList.js","components/Footer.js","App.js","index.js"],"names":["TodoAdd","state","newTodoTitle","titleError","handleNewTodoTitleChange","event","value","target","setState","handleFormSubmit","preventDefault","trim","props","updateTodosList","clearState","this","className","onSubmit","placeholder","onChange","React","Component","Todo","todo","clearTodo","handlerStatus","classNames","view","editing","edited","completed","isTodoCompleted","id","type","checked","htmlFor","title","onClick","TodoList","todos","selectAllTodos","every","map","key","Footer","filter","length","href","Exampletodos","App","newTodo","todoId","findIndex","remainingTodos","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa1f6ac8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoAdd extends React.Component {\n  state = {\n    newTodoTitle: '',\n    titleError: false,\n  };\n\n  handleNewTodoTitleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      titleError: false,\n      newTodoTitle: value,\n    });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const { newTodoTitle } = this.state;\n\n    if (!newTodoTitle) {\n      this.setState({\n        titleError: !newTodoTitle,\n      });\n\n      return;\n    }\n\n    if (newTodoTitle.trim() === '') {\n      this.setState({ titleError: true });\n\n      return;\n    }\n\n    this.props.updateTodosList(newTodoTitle);\n    this.clearState();\n  }\n\n  clearState = () => {\n    this.setState({\n      newTodoTitle: '',\n    });\n  };\n\n  render() {\n    const {\n      newTodoTitle,\n      titleError,\n    } = this.state;\n\n    return (\n      <>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleFormSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={newTodoTitle}\n              onChange={this.handleNewTodoTitleChange}\n            />\n            {titleError}\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nTodoAdd.propTypes = {\n  updateTodosList: PropTypes.func.isRequired,\n};\n\nexport default TodoAdd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Todo = ({\n  todo,\n  clearTodo,\n  handlerStatus,\n}) => (\n  <li className={classNames({\n    view: true,\n    editing: todo.edited,\n    completed: todo.isTodoCompleted,\n  })}\n  >\n    <div className=\"view\">\n      <input\n        id={todo.id}\n        type=\"checkbox\"\n        className=\"toggle\"\n        onChange={() => handlerStatus(todo.id)}\n        checked={todo.isTodoCompleted}\n      />\n      <label\n        htmlFor={todo.id}\n      >\n        {todo.title}\n      </label>\n      <button\n        type=\"button\"\n        id={todo.id}\n        className=\"destroy\"\n        onClick={clearTodo}\n      />\n    </div>\n    <input\n      type=\"text\"\n      className=\"edit\"\n    />\n  </li>\n);\n\nTodo.propTypes = {\n  clearTodo: PropTypes.func.isRequired,\n  handlerStatus: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    isTodoCompleted: PropTypes.bool,\n    edited: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({\n  todos,\n  selectAllTodos,\n  handlerStatus,\n  clearTodo,\n}) => (\n  <>\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={selectAllTodos}\n        checked={todos.every(todo => todo.isTodoCompleted)}\n      />\n      <label htmlFor=\"toggle-all\">\n        Mark all as complete\n      </label>\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <Todo\n            todo={todo}\n            key={todo.id}\n            clearTodo={clearTodo}\n            handlerStatus={handlerStatus}\n          />\n        ))}\n      </ul>\n    </section>\n  </>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    isTodoCompleted: PropTypes.bool,\n  })).isRequired,\n  selectAllTodos: PropTypes.func.isRequired,\n  handlerStatus: PropTypes.func.isRequired,\n  clearTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Footer = ({ todos }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.isTodoCompleted).length}\n      {' '}\n      items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a href=\"#/\" className=\"selected\">All</a>\n      </li>\n\n      <li>\n        <a href=\"#/active\">Active</a>\n      </li>\n\n      <li>\n        <a href=\"#/completed\">Completed</a>\n      </li>\n    </ul>\n\n    <button type=\"button\" className=\"clear-completed\">\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    isTodoCompleted: PropTypes.bool,\n  })).isRequired,\n};\n","import React from 'react';\nimport TodoAdd from './components/TodoAdd';\nimport TodoList from './components/TodoList';\nimport { Footer } from './components/Footer';\n\nconst Exampletodos = [\n  {\n    id: 1,\n    title: 'learn Html',\n    isTodoCompleted: true,\n  },\n  {\n    id: 2,\n    title: 'learn CSS',\n    isTodoCompleted: true,\n  },\n  {\n    id: 3,\n    title: 'learn JS',\n    isTodoCompleted: true,\n  },\n  {\n    id: 4,\n    title: 'learn React',\n    isTodoCompleted: false,\n  },\n\n];\n\nclass App extends React.Component {\n  state = {\n    todos: [...Exampletodos],\n  }\n\n  updateTodosList = (newTodoTitle) => {\n    this.setState((state) => {\n      const newTodo = {\n        title: newTodoTitle,\n        id: state.todos.length + 1,\n        isTodoCompleted: false,\n      };\n\n      return {\n        todos: [...state.todos, newTodo],\n      };\n    });\n  }\n\n  clearTodo = ({ target }) => {\n    const todoId = this.state.todos.findIndex(todo => todo.id === +target.id);\n\n    this.setState((state) => {\n      const remainingTodos = [...state.todos];\n\n      remainingTodos.splice(todoId, 1);\n\n      return (\n        {\n          todos: [...remainingTodos],\n        }\n      );\n    });\n  };\n\n  selectAllTodos = ({ target }) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        isTodoCompleted: target.checked,\n      })),\n    }));\n  }\n\n  handlerStatus = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            isTodoCompleted: !todo.isTodoCompleted,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <TodoAdd updateTodosList={this.updateTodosList} />\n        <TodoList\n          todos={this.state.todos}\n          handlerStatus={this.handlerStatus}\n          selectAllTodos={this.selectAllTodos}\n          clearTodo={this.clearTodo}\n        />\n        <Footer\n          todos={this.state.todos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}